#+HUGO_BASE_DIR: ../
#+TITLE: aitrans_dtp windows 开发遇坑与总结
#+DATE: 2022-04-06
#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_TAGS: NOTE
#+HUGO_CATEGORIES: 计算机
#+HUGO_DRAFT: false

* aitrans_dtp windows 开发遇坑与总结
   :LOGBOOK:
   CLOCK: [2021-04-01 Thu 14:47]--[2021-04-01 Thu 15:08] =>  0:21
   :END:
 [2021-04-01 Thu 14:47]

 这次开发在 windows10 上进行，遇到了些许问题，在此记录一下整体上发生了什么事情，以及对应的解决方案。

** 主要问题：WSL2 上 docker 不能正确运行 tc 指令

    主要问题基本上如题目所描述的那样

** 主要问题产生原因

    通过在网络上的搜索，发现这是一个在 WSL2 上无法运行 tc 相关的指令的问题，因为 WSL2 的内核默认对 tc 的支持不够。

    问题描述基本上与这个一致 https://docs.microsoft.com/en-us/answers/questions/48142/wsl2-qdisc-netem-support.html

    提出问题的解决方案是重新编译 WSL2 ，并且开启部分选项。

    推荐的解决方案如下： https://github.com/microsoft/WSL/issues/6065

** 尝试一：使用 windows docker desktop

    采用 windows 上的 docker ，最初和 WSL2 遇到了完全相同的问题。结果是：程序可以运行，tc 的部分指令可以正常运行但是 qdisc 相关的指令则不能正常运行。

    在设置中选择“使用 WSL2 作为后端”，将其取消，就可以解决掉 tc 指令运行错误的问题。不过这导致了另一个问题：

    两个容器间可以建立连接，但是 client 无法收到任何消息

** 尝试二：采用虚拟机

    配置好环境后发现，虚拟机和 docker 的运行结果一致，都是两者可以建立连接，但是无法收到消息。虽然猜测可能是 windows 自带的防火墙的问题，不过在关闭了防火墙后测试依然会遇到问题，所以这个问题最终没有解决。

** 尝试三：编译内核

    编译 WSL2 内核并不困难，可以参考这篇专栏 https://www.bilibili.com/read/cv8619998/

    编译的时候需要开启一些选项，可以参考 https://github.com/microsoft/WSL/issues/6065 进行设置。

    在编译之后使用 WSL2 发现问题消失了，可以正常运行了。

    2021.4.27 建议使用 .wslconfig 来管理 wsl2 的 kernel 位置，详情可见 https://docs.microsoft.com/en-us/windows/wsl/wsl-config

** 问题总结

    WSL2 对于 tc 的支持并不够好，所以需要根据自己的需要重新编译内核。

    不过为什么 aitrans_dtp 仓库在我的电脑上不能用 client 收到东西，这件事还是不太清楚原因。因为有的参赛选手用的是 windows 开发，所以不知道他们是怎么做到的。只能说如果遇到了这种问题最好交流或记录一下。
